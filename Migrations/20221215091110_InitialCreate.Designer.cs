// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Services;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20221215091110_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Project.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Great blog.",
                            PostId = 1,
                            createdAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(1089),
                            updatedAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(1092)
                        });
                });

            modelBuilder.Entity("Project.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("slug")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("slug")
                        .IsUnique();

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Title = "Augmented Reality iOS Application",
                            createdAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(915),
                            slug = "augmented-reality-ios-application",
                            updatedAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(948)
                        },
                        new
                        {
                            Id = 2,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Title = "Augmented Reality iOS Application",
                            createdAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(951),
                            slug = "augmented-reality-ios-application-2",
                            updatedAt = new DateTime(2022, 12, 15, 10, 11, 9, 964, DateTimeKind.Local).AddTicks(953)
                        });
                });

            modelBuilder.Entity("Project.Models.Tag", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Text", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Text = "iOS",
                            PostId = 1
                        },
                        new
                        {
                            Text = "AR",
                            PostId = 1
                        },
                        new
                        {
                            Text = "iOS",
                            PostId = 2
                        },
                        new
                        {
                            Text = "AR",
                            PostId = 2
                        },
                        new
                        {
                            Text = "Gazzda",
                            PostId = 2
                        });
                });

            modelBuilder.Entity("Project.Models.Comment", b =>
                {
                    b.HasOne("Project.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Project.Models.Tag", b =>
                {
                    b.HasOne("Project.Models.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Project.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
